{"remainingRequest":"/home/gian/go/src/haaukins/svcs/amigo/resources/private/js/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/gian/go/src/haaukins/svcs/amigo/resources/private/js/src/components/Scoreboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/gian/go/src/haaukins/svcs/amigo/resources/private/js/src/components/Scoreboard.vue","mtime":1578923318836},{"path":"/home/gian/go/src/haaukins/svcs/amigo/resources/private/js/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/gian/go/src/haaukins/svcs/amigo/resources/private/js/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/gian/go/src/haaukins/svcs/amigo/resources/private/js/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/gian/go/src/haaukins/svcs/amigo/resources/private/js/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport TeamRow from './TeamRow.vue'\n/* eslint-disable */\n\nexport default {\n  name: 'scoreboard',\n  data: () => {\n    return {\n      teams: [],\n      challenges: [],\n    }\n  },\n  created: function() {\n    var url = new URL('/scores', window.location.href);\n    url.protocol = url.protocol.replace('http', 'ws');\n    this.connectToWS(url.href);\n  },\n  methods: {\n    connectToWS: function(url) {\n      var self = this;\n      var ws = new WebSocket(url);\n      ws.onmessage = self.receiveMsg\n      ws.onclose = function(){\n\tws = null;\n        setTimeout(function(){self.connectToWS(url)}, 3000);\n      };\n    },\n    receiveMsg: function(evt) {\n\tvar messages = evt.data.split('\\n');\n\tfor (var i = 0; i < messages.length; i++) {\n\t  const msg = messages[i];\n\t  const json = JSON.parse(msg);\n\t  switch (json.msg) {\n\t  case \"challenges\":\n\t    this.challenges = json.values;\n\t    console.log(this.challenges.toString())\n\t    break;\n\t  case \"teams\":\n\t    this.teams = json.values;\n        console.log(this.teams.toString())\n\t    break;\n\t  }\n\t}\n    },\n  },\n  components: {\n    TeamRow,\n  }\n}\n",{"version":3,"sources":["Scoreboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Scoreboard.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<table class=\"table centerbox is-striped\">\n  <thead>\n    <tr>\n      <th></th>\n      <th>Team</th>\n      <th v-for=\"chal in challenges\" v-bind:key=\"chal.tag\"><abbr :title=\"chal.name\">{{ chal.tag }}</abbr></th>\n    </tr>\n  </thead>\n  <tbody>\n    <team-row v-for=\"(team, index) in teams\" v-bind:key=\"team.id\" :name=\"team.name\" :completions=\"team.completions\" :pos=\"index + 1\"></team-row>\n    <tr>\n      <td></td>\n      <td>{{teams}}</td>\n      <td>{{challenges}}</td>\n    </tr>\n  </tbody>\n</table>\n\n</template>\n\n<script>\nimport TeamRow from './TeamRow.vue'\n/* eslint-disable */\n\nexport default {\n  name: 'scoreboard',\n  data: () => {\n    return {\n      teams: [],\n      challenges: [],\n    }\n  },\n  created: function() {\n    var url = new URL('/scores', window.location.href);\n    url.protocol = url.protocol.replace('http', 'ws');\n    this.connectToWS(url.href);\n  },\n  methods: {\n    connectToWS: function(url) {\n      var self = this;\n      var ws = new WebSocket(url);\n      ws.onmessage = self.receiveMsg\n      ws.onclose = function(){\n\tws = null;\n        setTimeout(function(){self.connectToWS(url)}, 3000);\n      };\n    },\n    receiveMsg: function(evt) {\n\tvar messages = evt.data.split('\\n');\n\tfor (var i = 0; i < messages.length; i++) {\n\t  const msg = messages[i];\n\t  const json = JSON.parse(msg);\n\t  switch (json.msg) {\n\t  case \"challenges\":\n\t    this.challenges = json.values;\n\t    console.log(this.challenges.toString())\n\t    break;\n\t  case \"teams\":\n\t    this.teams = json.values;\n        console.log(this.teams.toString())\n\t    break;\n\t  }\n\t}\n    },\n  },\n  components: {\n    TeamRow,\n  }\n}\n</script>\n"]}]}